# Generated by Django 2.1.5 on 2019-06-13 04:44

import accounts.models
import django.core.validators
from django.db import migrations, models
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('address_city', models.TextField(blank=True, default='', help_text='City/District/Suburb/Town/Village.', max_length=5000)),
                ('address_country', models.TextField(blank=True, default='', help_text='Billing address country.', max_length=5000)),
                ('address_line1', models.TextField(blank=True, default='', help_text='Street address/PO Box/Company name.', max_length=5000)),
                ('address_line2', models.TextField(blank=True, default='', help_text='Apartment/Suite/Unit/Building.', max_length=5000)),
                ('address_state', models.TextField(blank=True, default='', help_text='State/County/Province/Region.', max_length=5000)),
                ('address_zip', models.TextField(blank=True, default='', help_text='ZIP or postal code.', max_length=5000)),
                ('country', models.CharField(blank=True, default='', help_text='Two-letter ISO code representing the country of the card.', max_length=2)),
                ('exp_month', models.PositiveSmallIntegerField(help_text='Card expiration month.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('exp_year', models.PositiveSmallIntegerField(help_text='Card expiration year.', validators=[accounts.models.DynamicMinValueValidator(19), django.core.validators.MaxValueValidator(99)])),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
